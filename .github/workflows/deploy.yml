name: Deploy to Heroku

on:
  push:
    branches: [ dev, "devops/deploy-to-heroku" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          
      - run: npm i -g npm@7

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      
      - name: Install Node Dependencies
        run: npm install
        
      - name: Build
        run: npm run-script build

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: akhileshns/heroku-deploy@v3.11.10
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "dateam-frontend"
          heroku_email: "umar.ahmed@mail.utoronto.ca"
          usedocker: true
          appdir: "frontend"
  
  deploy-backend:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: akhileshns/heroku-deploy@v3.11.10
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "dateam-backend"
          heroku_email: "umar.ahmed@mail.utoronto.ca"
          usedocker: true
          appdir: "backend"
